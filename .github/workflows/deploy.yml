name: Release Deploy

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: jp2c
          GIT_TAG: ${{ github.ref_name }}
        run: |
          VERSION=$(echo "$GIT_TAG" | sed 's/^v//')
          echo "Using version tag: $VERSION"
          docker buildx build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION --platform linux/amd64,linux/arm64 --push .

      # 🔑 Kubeconfig 세팅
      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.K3S_KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      # Helm upgrade 실행
      - name: Deploy with Helm
        env:
          GIT_TAG: ${{ github.ref_name }}
        run: |
          VERSION=$(echo "$GIT_TAG" | sed 's/^v//')

          helm upgrade --install jp2c ./jp2c-chart \
            --set image.repository=${{ steps.login-ecr.outputs.registry }}/jp2c \
            --set image.tag=$VERSION \
            --set secret.jwtSecret="$(openssl rand -base64 64)" \
            --set postgres.username=${{ secrets.POSTGRES_USERNAME }} \
            --set postgres.password=${{ secrets.POSTGRES_PASSWORD }} \
            --set mail.host=${{ secrets.MAIL_HOST }} \
            --set mail.port=${{ secrets.MAIL_PORT }} \
            --set mail.username=${{ secrets.MAIL_USERNAME }} \
            --set mail.password=${{ secrets.MAIL_PASSWORD }}
